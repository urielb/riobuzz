doctype html
html(lang="en")
  head
    meta(charset="utf8")
    meta(http-equiv="X-UA-Compatible", content="IE=edge")
    meta(name="description", content="Um projeto que pretende tornar possível a descoberta de combinações de linhas de ônibus para ir de um ponto na cidade do rio de janeiro a outro.")
    meta(name="viewport", content="width=device-width, initial-scale=1")
    title= title
    meta(name="mobile-web-app-capable", content="yes")
    link(rel="icon", sizes="192x192", href="/images/touch/chrome-touch-icon-192x192.png")
    meta(name="apple-mobile-web-app-capable", content="yes")
    meta(name="apple-mobile-web-app-status-bar-style", content="black")
    meta(name="apple-mobile-web-app-title", content="RioBuzz")
    link(rel="apple-touch-icon-precomposed" href="apple-touch-icon-precomposed.png")
    meta(name="msapplication-TileImage", content="/images/touch/ms-touch-icon-144x144-precomposed.png")
    meta(name="msapplication-TileColor", content="#3372DF")
    link(rel="stylesheet",href="/stylesheets/jquery-ui.min.css",type="text/css",media="screen")
    link(rel='stylesheet', href='/stylesheets/styles.css')
    style.
      #view-source {
        position: fixed;
        display: block;
        right: 0;
        bottom: 0;
        margin-right: 40px;
        margin-bottom: 40px;
        z-index: 900;
      }
  body
    block content
      container(style="width: 100%; height: 100%")
        #mapContainer(style="position: relative; height: 100%; z-index: 1;")
          #map(style='position: relative; height: 100%; width: 100%;')

    script(src="/js/jquery-2.1.4.min.js")
    script(type='text/javascript', src='/js/jquery-ui.min.js', charset="utf-8")
    script(src="https://maps.googleapis.com/maps/api/js")
    script(type='text/javascript').
      var line = !{JSON.stringify(line)};
      var map;

      $(function () {
        function easyMarker(lat, lng, options) {
          if (map == undefined || map == null)
            return;
          var defaults = {
            icon: 'green-dot',
            title: "Stop",
            text: ""
          };

          $.extend(defaults, options);

          var latlng = {
            lat: lat,
            lng: lng
          };

          // green-dot
          var icon = "http://maps.google.com/mapfiles/ms/icons/{0}.png";
          icon = icon.replace("{0}", options.icon);

          var infowindow = new google.maps.InfoWindow({
            content: options.text
          });

          var marker = new google.maps.Marker({
            position: latlng,
            map: map,
            icon: icon,
            title: options.title
          });

          marker.addListener('click', function() {
            infowindow.open(map, marker);
          });
        }

        function initMap() {
          map = new google.maps.Map(document.getElementById("map"), {
            center: {lat: -22.936569, lng: -43.183814},
            zoom: 14,
            disableDefaultUI: true
          });
        }

        initMap();

        function loadStops(data, icon) {
          var stopsCoords = [];
          for (var i = 0; i < data.length; i++) {
            var stop = data[i];
            console.log(stop);

            easyMarker(stop.geo[0], stop.geo[1], {
              icon: icon,
              text: "<p>Order: " + stop.order + "</p><p>lat: " + stop.geo[0] + "</p><p>lng: " + stop.geo[1] + "</p>"
            });

            stopsCoords.push({
              lat: stop.geo[0],
              lng: stop.geo[1]
            });
          }

          return stopsCoords;
        }

        var initRoute = function () {
          var bounds = new google.maps.LatLngBounds();

          $.get("/stops/line/" + line.line + "/0", function (data) {
            var stopsCoords = loadStops(data, "red");

            var stopsPath = new google.maps.Polyline({
              path: stopsCoords,
              geodesic: true,
              strokeColor: '#FF0000',
              strokeOpacity: 1.0,
              strokeWeight: 2
            });

            stopsPath.setMap(map);
            var points = stopsPath.getPath().getArray();
            for (var n = 0; n < points.length; n++)
              bounds.extend(points[n]);

            map.fitBounds(bounds);
          });

          $.get("/stops/line/" + line.line + "/1", function (data) {
            var stopsCoords = loadStops(data, "blue");

            var stopsPath = new google.maps.Polyline({
              path: stopsCoords,
              geodesic: true,
              strokeColor: '#000088',
              strokeOpacity: 1.0,
              strokeWeight: 2
            });
            stopsPath.setMap(map);

            var points = stopsPath.getPath().getArray();
            for (var n = 0; n < points.length; n++)
              bounds.extend(points[n]);

            map.fitBounds(bounds);
          });

        };

        initRoute();
      });